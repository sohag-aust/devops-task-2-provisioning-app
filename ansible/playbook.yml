---
- name: Deploy Spring Boot Stack
  hosts: vm4

  vars:
    git_commit_hash: "{{ git_commit_hash }}"

  tasks:
  - name: Display latest commit hash
    ansible.builtin.debug:
      msg: "Deploying by commit: {{ git_commit_hash }}"

  - name: Ensure backend app directory exists
    ansible.builtin.file:
      path: /home/manager/backend
      state: directory
      mode: '0755'

  - name: Ensure observability directory exists
    ansible.builtin.file:
      path: /home/manager/observability
      state: directory
      mode: '0755'

  - name: Copy static stack file
    ansible.builtin.copy:
      src: ../docker-stack.yml
      dest: /home/manager/backend/docker-stack.yml

  - name: Copy observability folder with all its content
    ansible.builtin.synchronize:
      src: ../observability/
      dest: /home/manager/observability/
      recursive: yes
      remote_src: yes

  - name: Set absolute path fact
    set_fact:
      config_path: "/home/manager/observability/prometheus/prometheus.yml"

  - name: Show current working directory
    debug:
      msg: "Playbook running from: {{ lookup('env','PWD') }}"

  - name: Verify file exists
    stat:
      path: "{{ config_path }}"
    register: file_stat

  - name: Debug stat results
    debug:
      var: file_stat

  - name: Try direct file read
    command: cat "{{ config_path }}"
    register: direct_read
    ignore_errors: true

  - name: Show direct read results
    debug:
      var: direct_read

  - name: Attempt lookup with absolute path
    debug:
      msg: "Lookup result: {{ lookup('file', config_path) }}"
    ignore_errors: true

  - name: List directory contents
    command: ls -la /home/manager/observability/prometheus/
    register: dir_list

  - name: Show directory contents
    debug:
      var: dir_list.stdout_lines

  - name: Create prometheus docker config
    community.docker.docker_config:
      name: prometheus-config
      state: present
      data: "{{ lookup('file', config_path) }}"
    when: file_stat.stat.exists

  # - name: Create Docker config for grafana datasource.yml
  #   community.docker.docker_config:
  #     name: grafana-config
  #     state: present
  #     data: "{{ lookup('file', '/home/manager/observability/grafana/datasource.yml') }}"

  #    - name: Install jsondiff for Docker Stack module
  #      become: true
  #      ansible.builtin.pip:
  #        name: jsondiff
  #        state: present

  - name: Replace placeholder with commit hash
    ansible.builtin.replace:
      path: /home/manager/springboot-app/docker-stack.yml
      regexp: 'COMMIT_HASH_PLACEHOLDER'
      replace: "{{ git_commit_hash }}"

  - name: Deploy stack
    community.docker.docker_stack:
      name: provision-service
      state: present
      compose:
      - /home/manager/springboot-app/docker-stack.yml
